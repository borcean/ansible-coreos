- name: ZFS | Gather information about imported ZFS pools
  community.general.zpool_facts:

- name: ZFS | Import pool if not already imported
  ansible.builtin.command: zpool import '{{ zfs_pool.pool_name }}'
  when: zfs_pool.pool_name not in ansible_zfs_pools
  changed_when: true
  register: import_result

- name: ZFS | Notify success of pool import
  ansible.builtin.debug:
    msg: "ZFS pool {{ zfs_pool.pool_name }} was successfully imported."
  when: import_result is defined and import_result.rc == 0

- name: ZFS | Gather space usage about all imported ZFS pools
  community.general.zpool_facts:

# - name: ZFS | Create two-disk mirror {{ zfs_pool.pool_name }}
#   ansible.builtin.command: >
#     zpool create -o ashift=12
#     -m "{{ zfs_pool.mountpoint }}/{{ zfs_pool.pool_name }}"
#     "{{ zfs_pool.pool_name }}" mirror "{{ zfs_pool.disk1 }}" "{{ zfs_pool.disk2 }}"
#   register: result
#   changed_when: result.rc == 0
#   when: >
#     not (ansible_zfs_pools | length > 0 and
#          ansible_zfs_pools[0].name == zfs_pool.pool_name)

# - name: ZFS | Create filesystems
#   community.general.zfs:
#     name: '{{ zfs_pool.pool_name }}/{{ item.fs_name }}'
#     state: present
#   with_items:
#     "{{ zfs_filesystems }}"

# - name: ZFS | Enable weekly scub
#   ansible.builtin.systemd:
#     name: "zfs-scrub-weekly@{{ zfs_pool.pool_name }}.timer"
#     enabled: true
