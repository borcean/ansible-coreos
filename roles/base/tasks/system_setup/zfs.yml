- name: ZFS | Gather information about imported ZFS pools
  community.general.zpool_facts:

- name: ZFS | Check if pool is imported
  ansible.builtin.set_fact:
    zpool_exists: >
      {{ ansible_zfs_pools | selectattr('name', 'equalto', zfs_pool.pool_name) | list | length > 0 }}

- name: ZFS | Import pool if not already imported
  ansible.builtin.command: zpool import '{{ zfs_pool.pool_name }}'
  changed_when: true
  when: not zpool_exists

- name: ZFS | Gather space usage about all imported ZFS pools
  community.general.zpool_facts:

- name: ZFS | Check if pool is imported
  ansible.builtin.set_fact:
    zpool_exists: >
      {{ ansible_zfs_pools | selectattr('name', 'equalto', zfs_pool.pool_name) | list | length > 0 }}

- name: ZFS | Create two-disk mirror {{ zfs_pool.pool_name }}
  ansible.builtin.command: >
    zpool create -o ashift=12
    -m "{{ zfs_pool.mountpoint }}/{{ zfs_pool.pool_name }}"
    "{{ zfs_pool.pool_name }}" mirror "{{ zfs_pool.disk1 }}" "{{ zfs_pool.disk2 }}"
  register: result
  changed_when: result.rc == 0
  when:
    - not zpool_exists
    - zfs_pool.create | bool

- name: ZFS | Create filesystems
  community.general.zfs:
    name: '{{ zfs_pool.pool_name }}/{{ item.fs_name }}'
    state: present
  with_items:
    "{{ zfs_filesystems }}"
  when: zpool_exists

- name: ZFS | Enable weekly scub
  ansible.builtin.systemd:
    name: "zfs-scrub-weekly@{{ zfs_pool.pool_name }}.timer"
    enabled: true
  when: zpool_exists
